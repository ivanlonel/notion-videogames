# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: igdbapi.proto
# plugin: python-betterproto
# This file has been @generated

import warnings
from dataclasses import dataclass
from datetime import datetime

import betterproto


class AgeRatingCategoryEnum(betterproto.Enum):
    AGERATING_CATEGORY_NULL = 0
    ESRB = 1
    PEGI = 2
    CERO = 3
    USK = 4
    GRAC = 5
    CLASS_IND = 6
    ACB = 7


class AgeRatingRatingEnum(betterproto.Enum):
    AGERATING_RATING_NULL = 0
    THREE = 1
    SEVEN = 2
    TWELVE = 3
    SIXTEEN = 4
    EIGHTEEN = 5
    RP = 6
    EC = 7
    E = 8
    E10 = 9
    T = 10
    M = 11
    AO = 12
    CERO_A = 13
    CERO_B = 14
    CERO_C = 15
    CERO_D = 16
    CERO_Z = 17
    USK_0 = 18
    USK_6 = 19
    USK_12 = 20
    USK_16 = 21
    USK_18 = 22
    GRAC_ALL = 23
    GRAC_TWELVE = 24
    GRAC_FIFTEEN = 25
    GRAC_EIGHTEEN = 26
    GRAC_TESTING = 27
    CLASS_IND_L = 28
    CLASS_IND_TEN = 29
    CLASS_IND_TWELVE = 30
    CLASS_IND_FOURTEEN = 31
    CLASS_IND_SIXTEEN = 32
    CLASS_IND_EIGHTEEN = 33
    ACB_G = 34
    ACB_PG = 35
    ACB_M = 36
    ACB_MA15 = 37
    ACB_R18 = 38
    ACB_RC = 39


class AgeRatingContentDescriptionCategoryEnum(betterproto.Enum):
    AGERATINGCONTENTDESCRIPTION_CATEGORY_NULL = 0
    ESRB_ALCOHOL_REFERENCE = 1
    ESRB_ANIMATED_BLOOD = 2
    ESRB_BLOOD = 3
    ESRB_BLOOD_AND_GORE = 4
    ESRB_CARTOON_VIOLENCE = 5
    ESRB_COMIC_MISCHIEF = 6
    ESRB_CRUDE_HUMOR = 7
    ESRB_DRUG_REFERENCE = 8
    ESRB_FANTASY_VIOLENCE = 9
    ESRB_INTENSE_VIOLENCE = 10
    ESRB_LANGUAGE = 11
    ESRB_LYRICS = 12
    ESRB_MATURE_HUMOR = 13
    ESRB_NUDITY = 14
    ESRB_PARTIAL_NUDITY = 15
    ESRB_REAL_GAMBLING = 16
    ESRB_SEXUAL_CONTENT = 17
    ESRB_SEXUAL_THEMES = 18
    ESRB_SEXUAL_VIOLENCE = 19
    ESRB_SIMULATED_GAMBLING = 20
    ESRB_STRONG_LANGUAGE = 21
    ESRB_STRONG_LYRICS = 22
    ESRB_STRONG_SEXUAL_CONTENT = 23
    ESRB_SUGGESTIVE_THEMES = 24
    ESRB_TOBACCO_REFERENCE = 25
    ESRB_USE_OF_ALCOHOL = 26
    ESRB_USE_OF_DRUGS = 27
    ESRB_USE_OF_TOBACCO = 28
    ESRB_VIOLENCE = 29
    ESRB_VIOLENT_REFERENCES = 30
    ESRB_ANIMATED_VIOLENCE = 31
    ESRB_MILD_LANGUAGE = 32
    ESRB_MILD_VIOLENCE = 33
    ESRB_USE_OF_DRUGS_AND_ALCOHOL = 34
    ESRB_DRUG_AND_ALCOHOL_REFERENCE = 35
    ESRB_MILD_SUGGESTIVE_THEMES = 36
    ESRB_MILD_CARTOON_VIOLENCE = 37
    ESRB_MILD_BLOOD = 38
    ESRB_REALISTIC_BLOOD_AND_GORE = 39
    ESRB_REALISTIC_VIOLENCE = 40
    ESRB_ALCOHOL_AND_TOBACCO_REFERENCE = 41
    ESRB_MATURE_SEXUAL_THEMES = 42
    ESRB_MILD_ANIMATED_VIOLENCE = 43
    ESRB_MILD_SEXUAL_THEMES = 44
    ESRB_USE_OF_ALCOHOL_AND_TOBACCO = 45
    ESRB_ANIMATED_BLOOD_AND_GORE = 46
    ESRB_MILD_FANTASY_VIOLENCE = 47
    ESRB_MILD_LYRICS = 48
    ESRB_REALISTIC_BLOOD = 49
    PEGI_VIOLENCE = 50
    PEGI_SEX = 51
    PEGI_DRUGS = 52
    PEGI_FEAR = 53
    PEGI_DISCRIMINATION = 54
    PEGI_BAD_LANGUAGE = 55
    PEGI_GAMBLING = 56
    PEGI_ONLINE_GAMEPLAY = 57
    PEGI_IN_GAME_PURCHASES = 58
    CERO_LOVE = 59
    CERO_SEXUAL_CONTENT = 60
    CERO_VIOLENCE = 61
    CERO_HORROR = 62
    CERO_DRINKING_SMOKING = 63
    CERO_GAMBLING = 64
    CERO_CRIME = 65
    CERO_CONTROLLED_SUBSTANCES = 66
    CERO_LANGUAGES_AND_OTHERS = 67
    GRAC_SEXUALITY = 68
    GRAC_VIOLENCE = 69
    GRAC_FEAR_HORROR_THREATENING = 70
    GRAC_LANGUAGE = 71
    GRAC_ALCOHOL_TOBACCO_DRUG = 72
    GRAC_CRIME_ANTI_SOCIAL = 73
    GRAC_GAMBLING = 74
    CLASS_IND_VIOLENCIA = 75
    CLASS_IND_VIOLENCIA_EXTREMA = 76
    CLASS_IND_CONTEUDO_SEXUAL = 77
    CLASS_IND_NUDEZ = 78
    CLASS_IND_SEXO = 79
    CLASS_IND_SEXO_EXPLICITO = 80
    CLASS_IND_DROGAS = 81
    CLASS_IND_DROGAS_LICITAS = 82
    CLASS_IND_DROGAS_ILICITAS = 83
    CLASS_IND_LINGUAGEM_IMPROPRIA = 84
    CLASS_IND_ATOS_CRIMINOSOS = 85


class GenderGenderEnum(betterproto.Enum):
    MALE = 0
    FEMALE = 1
    OTHER = 2


class CharacterSpeciesEnum(betterproto.Enum):
    CHARACTER_SPECIES_NULL = 0
    HUMAN = 1
    ALIEN = 2
    ANIMAL = 3
    ANDROID = 4
    UNKNOWN = 5


class DateFormatChangeDateCategoryEnum(betterproto.Enum):
    YYYYMMMMDD = 0
    YYYYMMMM = 1
    YYYY = 2
    YYYYQ1 = 3
    YYYYQ2 = 4
    YYYYQ3 = 5
    YYYYQ4 = 6
    TBD = 7


class WebsiteCategoryEnum(betterproto.Enum):
    WEBSITE_CATEGORY_NULL = 0
    WEBSITE_OFFICIAL = 1
    WEBSITE_WIKIA = 2
    WEBSITE_WIKIPEDIA = 3
    WEBSITE_FACEBOOK = 4
    WEBSITE_TWITTER = 5
    WEBSITE_TWITCH = 6
    WEBSITE_INSTAGRAM = 8
    WEBSITE_YOUTUBE = 9
    WEBSITE_IPHONE = 10
    WEBSITE_IPAD = 11
    WEBSITE_ANDROID = 12
    WEBSITE_STEAM = 13
    WEBSITE_REDDIT = 14
    WEBSITE_ITCH = 15
    WEBSITE_EPICGAMES = 16
    WEBSITE_GOG = 17
    WEBSITE_DISCORD = 18


class ExternalGameCategoryEnum(betterproto.Enum):
    EXTERNALGAME_CATEGORY_NULL = 0
    EXTERNALGAME_STEAM = 1
    EXTERNALGAME_GOG = 5
    EXTERNALGAME_YOUTUBE = 10
    EXTERNALGAME_MICROSOFT = 11
    EXTERNALGAME_APPLE = 13
    EXTERNALGAME_TWITCH = 14
    EXTERNALGAME_ANDROID = 15
    EXTERNALGAME_AMAZON_ASIN = 20
    EXTERNALGAME_AMAZON_LUNA = 22
    EXTERNALGAME_AMAZON_ADG = 23
    EXTERNALGAME_EPIC_GAME_STORE = 26
    EXTERNALGAME_OCULUS = 28
    EXTERNALGAME_UTOMIK = 29
    EXTERNALGAME_ITCH_IO = 30
    EXTERNALGAME_XBOX_MARKETPLACE = 31
    EXTERNALGAME_KARTRIDGE = 32
    EXTERNALGAME_PLAYSTATION_STORE_US = 36
    EXTERNALGAME_FOCUS_ENTERTAINMENT = 37
    EXTERNALGAME_XBOX_GAME_PASS_ULTIMATE_CLOUD = 54
    EXTERNALGAME_GAMEJOLT = 55


class ExternalGameMediaEnum(betterproto.Enum):
    EXTERNALGAME_MEDIA_NULL = 0
    EXTERNALGAME_DIGITAL = 1
    EXTERNALGAME_PHYSICAL = 2


class GameCategoryEnum(betterproto.Enum):
    MAIN_GAME = 0
    DLC_ADDON = 1
    EXPANSION = 2
    BUNDLE = 3
    STANDALONE_EXPANSION = 4
    MOD = 5
    EPISODE = 6
    SEASON = 7
    REMAKE = 8
    REMASTER = 9
    EXPANDED_GAME = 10
    PORT = 11
    FORK = 12
    PACK = 13
    UPDATE = 14


class GameStatusEnum(betterproto.Enum):
    RELEASED = 0
    ALPHA = 2
    BETA = 3
    EARLY_ACCESS = 4
    OFFLINE = 5
    CANCELLED = 6
    RUMORED = 7
    DELISTED = 8


class GameVersionFeatureCategoryEnum(betterproto.Enum):
    BOOLEAN = 0
    DESCRIPTION = 1


class GameVersionFeatureValueIncludedFeatureEnum(betterproto.Enum):
    NOT_INCLUDED = 0
    INCLUDED = 1
    PRE_ORDER_ONLY = 2


class PlatformCategoryEnum(betterproto.Enum):
    PLATFORM_CATEGORY_NULL = 0
    CONSOLE = 1
    ARCADE = 2
    PLATFORM = 3
    OPERATING_SYSTEM = 4
    PORTABLE_CONSOLE = 5
    COMPUTER = 6


class RegionRegionEnum(betterproto.Enum):
    REGION_REGION_NULL = 0
    EUROPE = 1
    NORTH_AMERICA = 2
    AUSTRALIA = 3
    NEW_ZEALAND = 4
    JAPAN = 5
    CHINA = 6
    ASIA = 7
    WORLDWIDE = 8
    KOREA = 9
    BRAZIL = 10


class PopularitySourcePopularitySourceEnum(betterproto.Enum):
    POPULARITYSOURCE_POPULARITY_SOURCE_NULL = 0
    IGDB = 121


class TestDummyEnumTestEnum(betterproto.Enum):
    TESTDUMMY_ENUM_TEST_NULL = 0
    ENUM1 = 1
    ENUM2 = 2


@dataclass(eq=False, repr=False)
class Count(betterproto.Message):
    count: int = betterproto.int64_field(1)


@dataclass(eq=False, repr=False)
class MultiQueryResult(betterproto.Message):
    name: str = betterproto.string_field(1)
    results: list[bytes] = betterproto.bytes_field(2)
    count: int = betterproto.int64_field(3)


@dataclass(eq=False, repr=False)
class MultiQueryResultArray(betterproto.Message):
    result: list["MultiQueryResult"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class AgeRatingResult(betterproto.Message):
    ageratings: list["AgeRating"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class AgeRating(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    category: "AgeRatingCategoryEnum" = betterproto.enum_field(2)
    content_descriptions: list["AgeRatingContentDescription"] = betterproto.message_field(3)
    rating: "AgeRatingRatingEnum" = betterproto.enum_field(4)
    rating_cover_url: str = betterproto.string_field(5)
    synopsis: str = betterproto.string_field(6)
    checksum: str = betterproto.string_field(7)


@dataclass(eq=False, repr=False)
class AgeRatingContentDescriptionResult(betterproto.Message):
    ageratingcontentdescriptions: list["AgeRatingContentDescription"] = betterproto.message_field(
        1
    )


@dataclass(eq=False, repr=False)
class AgeRatingContentDescription(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    category: "AgeRatingContentDescriptionCategoryEnum" = betterproto.enum_field(2)
    description: str = betterproto.string_field(3)
    checksum: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class AlternativeNameResult(betterproto.Message):
    alternativenames: list["AlternativeName"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class AlternativeName(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    comment: str = betterproto.string_field(2)
    game: "Game" = betterproto.message_field(3)
    name: str = betterproto.string_field(4)
    checksum: str = betterproto.string_field(5)


@dataclass(eq=False, repr=False)
class ArtworkResult(betterproto.Message):
    artworks: list["Artwork"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class Artwork(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    alpha_channel: bool = betterproto.bool_field(2)
    animated: bool = betterproto.bool_field(3)
    game: "Game" = betterproto.message_field(4)
    height: int = betterproto.int32_field(5)
    image_id: str = betterproto.string_field(6)
    url: str = betterproto.string_field(7)
    width: int = betterproto.int32_field(8)
    checksum: str = betterproto.string_field(9)


@dataclass(eq=False, repr=False)
class CharacterResult(betterproto.Message):
    characters: list["Character"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class Character(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    akas: list[str] = betterproto.string_field(2)
    country_name: str = betterproto.string_field(3)
    created_at: datetime = betterproto.message_field(4)
    description: str = betterproto.string_field(5)
    games: list["Game"] = betterproto.message_field(6)
    gender: "GenderGenderEnum" = betterproto.enum_field(7)
    mug_shot: "CharacterMugShot" = betterproto.message_field(8)
    name: str = betterproto.string_field(9)
    slug: str = betterproto.string_field(10)
    species: "CharacterSpeciesEnum" = betterproto.enum_field(11)
    updated_at: datetime = betterproto.message_field(12)
    url: str = betterproto.string_field(13)
    checksum: str = betterproto.string_field(14)


@dataclass(eq=False, repr=False)
class CharacterMugShotResult(betterproto.Message):
    charactermugshots: list["CharacterMugShot"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class CharacterMugShot(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    alpha_channel: bool = betterproto.bool_field(2)
    animated: bool = betterproto.bool_field(3)
    height: int = betterproto.int32_field(4)
    image_id: str = betterproto.string_field(5)
    url: str = betterproto.string_field(6)
    width: int = betterproto.int32_field(7)
    checksum: str = betterproto.string_field(8)


@dataclass(eq=False, repr=False)
class CollectionResult(betterproto.Message):
    collections: list["Collection"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class Collection(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    created_at: datetime = betterproto.message_field(2)
    games: list["Game"] = betterproto.message_field(3)
    name: str = betterproto.string_field(4)
    slug: str = betterproto.string_field(5)
    updated_at: datetime = betterproto.message_field(6)
    url: str = betterproto.string_field(7)
    checksum: str = betterproto.string_field(8)
    type: "CollectionType" = betterproto.message_field(9)
    as_parent_relations: list["CollectionRelation"] = betterproto.message_field(10)
    as_child_relations: list["CollectionRelation"] = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class CollectionMembershipResult(betterproto.Message):
    collectionmemberships: list["CollectionMembership"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class CollectionMembership(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    game: "Game" = betterproto.message_field(2)
    collection: "Collection" = betterproto.message_field(3)
    type: "CollectionMembershipType" = betterproto.message_field(4)
    updated_at: datetime = betterproto.message_field(5)
    created_at: datetime = betterproto.message_field(6)
    checksum: str = betterproto.string_field(7)


@dataclass(eq=False, repr=False)
class CollectionMembershipTypeResult(betterproto.Message):
    collectionmembershiptypes: list["CollectionMembershipType"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class CollectionMembershipType(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    name: str = betterproto.string_field(2)
    description: str = betterproto.string_field(3)
    allowed_collection_type: "CollectionType" = betterproto.message_field(4)
    updated_at: datetime = betterproto.message_field(5)
    created_at: datetime = betterproto.message_field(6)
    checksum: str = betterproto.string_field(7)


@dataclass(eq=False, repr=False)
class CollectionRelationResult(betterproto.Message):
    collectionrelations: list["CollectionRelation"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class CollectionRelation(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    child_collection: "Collection" = betterproto.message_field(2)
    parent_collection: "Collection" = betterproto.message_field(3)
    type: "CollectionRelationType" = betterproto.message_field(4)
    updated_at: datetime = betterproto.message_field(5)
    created_at: datetime = betterproto.message_field(6)
    checksum: str = betterproto.string_field(7)


@dataclass(eq=False, repr=False)
class CollectionRelationTypeResult(betterproto.Message):
    collectionrelationtypes: list["CollectionRelationType"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class CollectionRelationType(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    name: str = betterproto.string_field(2)
    description: str = betterproto.string_field(3)
    allowed_child_type: "CollectionType" = betterproto.message_field(4)
    allowed_parent_type: "CollectionType" = betterproto.message_field(5)
    updated_at: datetime = betterproto.message_field(6)
    created_at: datetime = betterproto.message_field(7)
    checksum: str = betterproto.string_field(8)


@dataclass(eq=False, repr=False)
class CollectionTypeResult(betterproto.Message):
    collectiontypes: list["CollectionType"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class CollectionType(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    name: str = betterproto.string_field(2)
    description: str = betterproto.string_field(3)
    updated_at: datetime = betterproto.message_field(4)
    created_at: datetime = betterproto.message_field(5)
    checksum: str = betterproto.string_field(6)


@dataclass(eq=False, repr=False)
class CompanyResult(betterproto.Message):
    companies: list["Company"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class Company(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    change_date: datetime = betterproto.message_field(2)
    change_date_category: "DateFormatChangeDateCategoryEnum" = betterproto.enum_field(3)
    changed_company_id: "Company" = betterproto.message_field(4)
    country: int = betterproto.int32_field(5)
    created_at: datetime = betterproto.message_field(6)
    description: str = betterproto.string_field(7)
    developed: list["Game"] = betterproto.message_field(8)
    logo: "CompanyLogo" = betterproto.message_field(9)
    name: str = betterproto.string_field(10)
    parent: "Company" = betterproto.message_field(11)
    published: list["Game"] = betterproto.message_field(12)
    slug: str = betterproto.string_field(13)
    start_date: datetime = betterproto.message_field(14)
    start_date_category: "DateFormatChangeDateCategoryEnum" = betterproto.enum_field(15)
    updated_at: datetime = betterproto.message_field(16)
    url: str = betterproto.string_field(17)
    websites: list["CompanyWebsite"] = betterproto.message_field(18)
    checksum: str = betterproto.string_field(19)


@dataclass(eq=False, repr=False)
class CompanyLogoResult(betterproto.Message):
    companylogos: list["CompanyLogo"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class CompanyLogo(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    alpha_channel: bool = betterproto.bool_field(2)
    animated: bool = betterproto.bool_field(3)
    height: int = betterproto.int32_field(4)
    image_id: str = betterproto.string_field(5)
    url: str = betterproto.string_field(6)
    width: int = betterproto.int32_field(7)
    checksum: str = betterproto.string_field(8)


@dataclass(eq=False, repr=False)
class CompanyWebsiteResult(betterproto.Message):
    companywebsites: list["CompanyWebsite"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class CompanyWebsite(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    category: "WebsiteCategoryEnum" = betterproto.enum_field(2)
    trusted: bool = betterproto.bool_field(3)
    url: str = betterproto.string_field(4)
    checksum: str = betterproto.string_field(5)


@dataclass(eq=False, repr=False)
class CoverResult(betterproto.Message):
    covers: list["Cover"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class Cover(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    alpha_channel: bool = betterproto.bool_field(2)
    animated: bool = betterproto.bool_field(3)
    game: "Game" = betterproto.message_field(4)
    height: int = betterproto.int32_field(5)
    image_id: str = betterproto.string_field(6)
    url: str = betterproto.string_field(7)
    width: int = betterproto.int32_field(8)
    checksum: str = betterproto.string_field(9)
    game_localization: "GameLocalization" = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class EventResult(betterproto.Message):
    events: list["Event"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class Event(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    name: str = betterproto.string_field(2)
    description: str = betterproto.string_field(3)
    slug: str = betterproto.string_field(4)
    event_logo: "EventLogo" = betterproto.message_field(5)
    start_time: datetime = betterproto.message_field(6)
    time_zone: str = betterproto.string_field(7)
    end_time: datetime = betterproto.message_field(8)
    live_stream_url: str = betterproto.string_field(9)
    games: list["Game"] = betterproto.message_field(10)
    videos: list["GameVideo"] = betterproto.message_field(11)
    event_networks: list["EventNetwork"] = betterproto.message_field(12)
    created_at: datetime = betterproto.message_field(13)
    updated_at: datetime = betterproto.message_field(14)
    checksum: str = betterproto.string_field(15)


@dataclass(eq=False, repr=False)
class EventLogoResult(betterproto.Message):
    eventlogos: list["EventLogo"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class EventLogo(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    event: "Event" = betterproto.message_field(2)
    alpha_channel: bool = betterproto.bool_field(3)
    animated: bool = betterproto.bool_field(4)
    height: int = betterproto.int32_field(5)
    image_id: str = betterproto.string_field(6)
    url: str = betterproto.string_field(7)
    width: int = betterproto.int32_field(8)
    created_at: datetime = betterproto.message_field(9)
    updated_at: datetime = betterproto.message_field(10)
    checksum: str = betterproto.string_field(11)


@dataclass(eq=False, repr=False)
class EventNetworkResult(betterproto.Message):
    eventnetworks: list["EventNetwork"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class EventNetwork(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    event: "Event" = betterproto.message_field(2)
    url: str = betterproto.string_field(3)
    network_type: "NetworkType" = betterproto.message_field(4)
    created_at: datetime = betterproto.message_field(5)
    updated_at: datetime = betterproto.message_field(6)
    checksum: str = betterproto.string_field(7)


@dataclass(eq=False, repr=False)
class ExternalGameResult(betterproto.Message):
    externalgames: list["ExternalGame"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class ExternalGame(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    category: "ExternalGameCategoryEnum" = betterproto.enum_field(2)
    created_at: datetime = betterproto.message_field(3)
    game: "Game" = betterproto.message_field(4)
    name: str = betterproto.string_field(5)
    uid: str = betterproto.string_field(6)
    updated_at: datetime = betterproto.message_field(7)
    url: str = betterproto.string_field(8)
    year: int = betterproto.int32_field(9)
    media: "ExternalGameMediaEnum" = betterproto.enum_field(10)
    platform: "Platform" = betterproto.message_field(11)
    countries: list[int] = betterproto.int32_field(12)
    checksum: str = betterproto.string_field(13)


@dataclass(eq=False, repr=False)
class FranchiseResult(betterproto.Message):
    franchises: list["Franchise"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class Franchise(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    created_at: datetime = betterproto.message_field(2)
    games: list["Game"] = betterproto.message_field(3)
    name: str = betterproto.string_field(4)
    slug: str = betterproto.string_field(5)
    updated_at: datetime = betterproto.message_field(6)
    url: str = betterproto.string_field(7)
    checksum: str = betterproto.string_field(8)


@dataclass(eq=False, repr=False)
class GameResult(betterproto.Message):
    games: list["Game"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class Game(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    age_ratings: list["AgeRating"] = betterproto.message_field(2)
    aggregated_rating: float = betterproto.double_field(3)
    aggregated_rating_count: int = betterproto.int32_field(4)
    alternative_names: list["AlternativeName"] = betterproto.message_field(5)
    artworks: list["Artwork"] = betterproto.message_field(6)
    bundles: list["Game"] = betterproto.message_field(7)
    category: "GameCategoryEnum" = betterproto.enum_field(8)
    collection: "Collection" = betterproto.message_field(9)
    cover: "Cover" = betterproto.message_field(10)
    created_at: datetime = betterproto.message_field(11)
    dlcs: list["Game"] = betterproto.message_field(12)
    expansions: list["Game"] = betterproto.message_field(13)
    external_games: list["ExternalGame"] = betterproto.message_field(14)
    first_release_date: datetime = betterproto.message_field(15)
    follows: int = betterproto.int32_field(16)
    franchise: "Franchise" = betterproto.message_field(17)
    franchises: list["Franchise"] = betterproto.message_field(18)
    game_engines: list["GameEngine"] = betterproto.message_field(19)
    game_modes: list["GameMode"] = betterproto.message_field(20)
    genres: list["Genre"] = betterproto.message_field(21)
    hypes: int = betterproto.int32_field(22)
    involved_companies: list["InvolvedCompany"] = betterproto.message_field(23)
    keywords: list["Keyword"] = betterproto.message_field(24)
    multiplayer_modes: list["MultiplayerMode"] = betterproto.message_field(25)
    name: str = betterproto.string_field(26)
    parent_game: "Game" = betterproto.message_field(27)
    platforms: list["Platform"] = betterproto.message_field(28)
    player_perspectives: list["PlayerPerspective"] = betterproto.message_field(29)
    rating: float = betterproto.double_field(30)
    rating_count: int = betterproto.int32_field(31)
    release_dates: list["ReleaseDate"] = betterproto.message_field(32)
    screenshots: list["Screenshot"] = betterproto.message_field(33)
    similar_games: list["Game"] = betterproto.message_field(34)
    slug: str = betterproto.string_field(35)
    standalone_expansions: list["Game"] = betterproto.message_field(36)
    status: "GameStatusEnum" = betterproto.enum_field(37)
    storyline: str = betterproto.string_field(38)
    summary: str = betterproto.string_field(39)
    tags: list[int] = betterproto.int32_field(40)
    themes: list["Theme"] = betterproto.message_field(41)
    total_rating: float = betterproto.double_field(42)
    total_rating_count: int = betterproto.int32_field(43)
    updated_at: datetime = betterproto.message_field(44)
    url: str = betterproto.string_field(45)
    version_parent: "Game" = betterproto.message_field(46)
    version_title: str = betterproto.string_field(47)
    videos: list["GameVideo"] = betterproto.message_field(48)
    websites: list["Website"] = betterproto.message_field(49)
    checksum: str = betterproto.string_field(50)
    remakes: list["Game"] = betterproto.message_field(51)
    remasters: list["Game"] = betterproto.message_field(52)
    expanded_games: list["Game"] = betterproto.message_field(53)
    ports: list["Game"] = betterproto.message_field(54)
    forks: list["Game"] = betterproto.message_field(55)
    language_supports: list["LanguageSupport"] = betterproto.message_field(56)
    game_localizations: list["GameLocalization"] = betterproto.message_field(57)
    collections: list["Collection"] = betterproto.message_field(58)

    def __post_init__(self) -> None:
        super().__post_init__()
        if self.is_set("follows"):
            warnings.warn("Game.follows is deprecated", DeprecationWarning)


@dataclass(eq=False, repr=False)
class GameEngineResult(betterproto.Message):
    gameengines: list["GameEngine"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class GameEngine(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    companies: list["Company"] = betterproto.message_field(2)
    created_at: datetime = betterproto.message_field(3)
    description: str = betterproto.string_field(4)
    logo: "GameEngineLogo" = betterproto.message_field(5)
    name: str = betterproto.string_field(6)
    platforms: list["Platform"] = betterproto.message_field(7)
    slug: str = betterproto.string_field(8)
    updated_at: datetime = betterproto.message_field(9)
    url: str = betterproto.string_field(10)
    checksum: str = betterproto.string_field(11)


@dataclass(eq=False, repr=False)
class GameEngineLogoResult(betterproto.Message):
    gameenginelogos: list["GameEngineLogo"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class GameEngineLogo(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    alpha_channel: bool = betterproto.bool_field(2)
    animated: bool = betterproto.bool_field(3)
    height: int = betterproto.int32_field(4)
    image_id: str = betterproto.string_field(5)
    url: str = betterproto.string_field(6)
    width: int = betterproto.int32_field(7)
    checksum: str = betterproto.string_field(8)


@dataclass(eq=False, repr=False)
class GameLocalizationResult(betterproto.Message):
    gamelocalizations: list["GameLocalization"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class GameLocalization(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    name: str = betterproto.string_field(2)
    cover: "Cover" = betterproto.message_field(3)
    game: "Game" = betterproto.message_field(4)
    region: "Region" = betterproto.message_field(5)
    created_at: datetime = betterproto.message_field(6)
    updated_at: datetime = betterproto.message_field(7)
    checksum: str = betterproto.string_field(8)


@dataclass(eq=False, repr=False)
class GameModeResult(betterproto.Message):
    gamemodes: list["GameMode"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class GameMode(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    created_at: datetime = betterproto.message_field(2)
    name: str = betterproto.string_field(3)
    slug: str = betterproto.string_field(4)
    updated_at: datetime = betterproto.message_field(5)
    url: str = betterproto.string_field(6)
    checksum: str = betterproto.string_field(7)


@dataclass(eq=False, repr=False)
class GameVersionResult(betterproto.Message):
    gameversions: list["GameVersion"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class GameVersion(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    created_at: datetime = betterproto.message_field(2)
    features: list["GameVersionFeature"] = betterproto.message_field(3)
    game: "Game" = betterproto.message_field(4)
    games: list["Game"] = betterproto.message_field(5)
    updated_at: datetime = betterproto.message_field(6)
    url: str = betterproto.string_field(7)
    checksum: str = betterproto.string_field(8)


@dataclass(eq=False, repr=False)
class GameVersionFeatureResult(betterproto.Message):
    gameversionfeatures: list["GameVersionFeature"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class GameVersionFeature(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    category: "GameVersionFeatureCategoryEnum" = betterproto.enum_field(2)
    description: str = betterproto.string_field(3)
    position: int = betterproto.int32_field(4)
    title: str = betterproto.string_field(5)
    values: list["GameVersionFeatureValue"] = betterproto.message_field(6)
    checksum: str = betterproto.string_field(7)


@dataclass(eq=False, repr=False)
class GameVersionFeatureValueResult(betterproto.Message):
    gameversionfeaturevalues: list["GameVersionFeatureValue"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class GameVersionFeatureValue(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    game: "Game" = betterproto.message_field(2)
    game_feature: "GameVersionFeature" = betterproto.message_field(3)
    included_feature: "GameVersionFeatureValueIncludedFeatureEnum" = betterproto.enum_field(4)
    note: str = betterproto.string_field(5)
    checksum: str = betterproto.string_field(6)


@dataclass(eq=False, repr=False)
class GameVideoResult(betterproto.Message):
    gamevideos: list["GameVideo"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class GameVideo(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    game: "Game" = betterproto.message_field(2)
    name: str = betterproto.string_field(3)
    video_id: str = betterproto.string_field(4)
    checksum: str = betterproto.string_field(5)


@dataclass(eq=False, repr=False)
class GenreResult(betterproto.Message):
    genres: list["Genre"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class Genre(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    created_at: datetime = betterproto.message_field(2)
    name: str = betterproto.string_field(3)
    slug: str = betterproto.string_field(4)
    updated_at: datetime = betterproto.message_field(5)
    url: str = betterproto.string_field(6)
    checksum: str = betterproto.string_field(7)


@dataclass(eq=False, repr=False)
class InvolvedCompanyResult(betterproto.Message):
    involvedcompanies: list["InvolvedCompany"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class InvolvedCompany(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    company: "Company" = betterproto.message_field(2)
    created_at: datetime = betterproto.message_field(3)
    developer: bool = betterproto.bool_field(4)
    game: "Game" = betterproto.message_field(5)
    porting: bool = betterproto.bool_field(6)
    publisher: bool = betterproto.bool_field(7)
    supporting: bool = betterproto.bool_field(8)
    updated_at: datetime = betterproto.message_field(9)
    checksum: str = betterproto.string_field(10)


@dataclass(eq=False, repr=False)
class KeywordResult(betterproto.Message):
    keywords: list["Keyword"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class Keyword(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    created_at: datetime = betterproto.message_field(2)
    name: str = betterproto.string_field(3)
    slug: str = betterproto.string_field(4)
    updated_at: datetime = betterproto.message_field(5)
    url: str = betterproto.string_field(6)
    checksum: str = betterproto.string_field(7)


@dataclass(eq=False, repr=False)
class LanguageResult(betterproto.Message):
    languages: list["Language"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class Language(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    name: str = betterproto.string_field(2)
    native_name: str = betterproto.string_field(3)
    locale: str = betterproto.string_field(4)
    created_at: datetime = betterproto.message_field(5)
    updated_at: datetime = betterproto.message_field(6)
    checksum: str = betterproto.string_field(7)


@dataclass(eq=False, repr=False)
class LanguageSupportResult(betterproto.Message):
    languagesupports: list["LanguageSupport"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class LanguageSupport(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    game: "Game" = betterproto.message_field(2)
    language: "Language" = betterproto.message_field(3)
    language_support_type: "LanguageSupportType" = betterproto.message_field(4)
    created_at: datetime = betterproto.message_field(5)
    updated_at: datetime = betterproto.message_field(6)
    checksum: str = betterproto.string_field(7)


@dataclass(eq=False, repr=False)
class LanguageSupportTypeResult(betterproto.Message):
    languagesupporttypes: list["LanguageSupportType"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class LanguageSupportType(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    name: str = betterproto.string_field(2)
    created_at: datetime = betterproto.message_field(3)
    updated_at: datetime = betterproto.message_field(4)
    checksum: str = betterproto.string_field(5)


@dataclass(eq=False, repr=False)
class MultiplayerModeResult(betterproto.Message):
    multiplayermodes: list["MultiplayerMode"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class MultiplayerMode(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    campaigncoop: bool = betterproto.bool_field(2)
    dropin: bool = betterproto.bool_field(3)
    game: "Game" = betterproto.message_field(4)
    lancoop: bool = betterproto.bool_field(5)
    offlinecoop: bool = betterproto.bool_field(6)
    offlinecoopmax: int = betterproto.int32_field(7)
    offlinemax: int = betterproto.int32_field(8)
    onlinecoop: bool = betterproto.bool_field(9)
    onlinecoopmax: int = betterproto.int32_field(10)
    onlinemax: int = betterproto.int32_field(11)
    platform: "Platform" = betterproto.message_field(12)
    splitscreen: bool = betterproto.bool_field(13)
    splitscreenonline: bool = betterproto.bool_field(14)
    checksum: str = betterproto.string_field(15)


@dataclass(eq=False, repr=False)
class NetworkTypeResult(betterproto.Message):
    networktypes: list["NetworkType"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class NetworkType(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    name: str = betterproto.string_field(2)
    event_networks: list["EventNetwork"] = betterproto.message_field(3)
    created_at: datetime = betterproto.message_field(4)
    updated_at: datetime = betterproto.message_field(5)
    checksum: str = betterproto.string_field(6)


@dataclass(eq=False, repr=False)
class PlatformResult(betterproto.Message):
    platforms: list["Platform"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class Platform(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    abbreviation: str = betterproto.string_field(2)
    alternative_name: str = betterproto.string_field(3)
    category: "PlatformCategoryEnum" = betterproto.enum_field(4)
    created_at: datetime = betterproto.message_field(5)
    generation: int = betterproto.int32_field(6)
    name: str = betterproto.string_field(7)
    platform_logo: "PlatformLogo" = betterproto.message_field(8)
    platform_family: "PlatformFamily" = betterproto.message_field(9)
    slug: str = betterproto.string_field(10)
    summary: str = betterproto.string_field(11)
    updated_at: datetime = betterproto.message_field(12)
    url: str = betterproto.string_field(13)
    versions: list["PlatformVersion"] = betterproto.message_field(14)
    websites: list["PlatformWebsite"] = betterproto.message_field(15)
    checksum: str = betterproto.string_field(16)


@dataclass(eq=False, repr=False)
class PlatformFamilyResult(betterproto.Message):
    platformfamilies: list["PlatformFamily"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class PlatformFamily(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    name: str = betterproto.string_field(2)
    slug: str = betterproto.string_field(3)
    checksum: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class PlatformLogoResult(betterproto.Message):
    platformlogos: list["PlatformLogo"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class PlatformLogo(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    alpha_channel: bool = betterproto.bool_field(2)
    animated: bool = betterproto.bool_field(3)
    height: int = betterproto.int32_field(4)
    image_id: str = betterproto.string_field(5)
    url: str = betterproto.string_field(6)
    width: int = betterproto.int32_field(7)
    checksum: str = betterproto.string_field(8)


@dataclass(eq=False, repr=False)
class PlatformVersionResult(betterproto.Message):
    platformversions: list["PlatformVersion"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class PlatformVersion(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    companies: list["PlatformVersionCompany"] = betterproto.message_field(2)
    connectivity: str = betterproto.string_field(3)
    cpu: str = betterproto.string_field(4)
    graphics: str = betterproto.string_field(5)
    main_manufacturer: "PlatformVersionCompany" = betterproto.message_field(6)
    media: str = betterproto.string_field(7)
    memory: str = betterproto.string_field(8)
    name: str = betterproto.string_field(9)
    online: str = betterproto.string_field(10)
    os: str = betterproto.string_field(11)
    output: str = betterproto.string_field(12)
    platform_logo: "PlatformLogo" = betterproto.message_field(13)
    platform_version_release_dates: list["PlatformVersionReleaseDate"] = betterproto.message_field(
        14
    )
    resolutions: str = betterproto.string_field(15)
    slug: str = betterproto.string_field(16)
    sound: str = betterproto.string_field(17)
    storage: str = betterproto.string_field(18)
    summary: str = betterproto.string_field(19)
    url: str = betterproto.string_field(20)
    checksum: str = betterproto.string_field(21)


@dataclass(eq=False, repr=False)
class PlatformVersionCompanyResult(betterproto.Message):
    platformversioncompanies: list["PlatformVersionCompany"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class PlatformVersionCompany(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    comment: str = betterproto.string_field(2)
    company: "Company" = betterproto.message_field(3)
    developer: bool = betterproto.bool_field(4)
    manufacturer: bool = betterproto.bool_field(5)
    checksum: str = betterproto.string_field(6)


@dataclass(eq=False, repr=False)
class PlatformVersionReleaseDateResult(betterproto.Message):
    platformversionreleasedates: list["PlatformVersionReleaseDate"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class PlatformVersionReleaseDate(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    category: "DateFormatChangeDateCategoryEnum" = betterproto.enum_field(2)
    created_at: datetime = betterproto.message_field(3)
    date: datetime = betterproto.message_field(4)
    human: str = betterproto.string_field(5)
    m: int = betterproto.int32_field(6)
    platform_version: "PlatformVersion" = betterproto.message_field(7)
    region: "RegionRegionEnum" = betterproto.enum_field(8)
    updated_at: datetime = betterproto.message_field(9)
    y: int = betterproto.int32_field(10)
    checksum: str = betterproto.string_field(11)


@dataclass(eq=False, repr=False)
class PlatformWebsiteResult(betterproto.Message):
    platformwebsites: list["PlatformWebsite"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class PlatformWebsite(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    category: "WebsiteCategoryEnum" = betterproto.enum_field(2)
    trusted: bool = betterproto.bool_field(3)
    url: str = betterproto.string_field(4)
    checksum: str = betterproto.string_field(5)


@dataclass(eq=False, repr=False)
class PlayerPerspectiveResult(betterproto.Message):
    playerperspectives: list["PlayerPerspective"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class PlayerPerspective(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    created_at: datetime = betterproto.message_field(2)
    name: str = betterproto.string_field(3)
    slug: str = betterproto.string_field(4)
    updated_at: datetime = betterproto.message_field(5)
    url: str = betterproto.string_field(6)
    checksum: str = betterproto.string_field(7)


@dataclass(eq=False, repr=False)
class PopularityPrimitiveResult(betterproto.Message):
    popularityprimitives: list["PopularityPrimitive"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class PopularityPrimitive(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    game_id: int = betterproto.int32_field(2)
    popularity_type: "PopularityType" = betterproto.message_field(3)
    popularity_source: "PopularitySourcePopularitySourceEnum" = betterproto.enum_field(4)
    value: float = betterproto.double_field(5)
    calculated_at: datetime = betterproto.message_field(6)
    created_at: datetime = betterproto.message_field(7)
    updated_at: datetime = betterproto.message_field(8)
    checksum: str = betterproto.string_field(9)


@dataclass(eq=False, repr=False)
class PopularityTypeResult(betterproto.Message):
    popularitytypes: list["PopularityType"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class PopularityType(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    popularity_source: "PopularitySourcePopularitySourceEnum" = betterproto.enum_field(2)
    name: str = betterproto.string_field(3)
    created_at: datetime = betterproto.message_field(4)
    updated_at: datetime = betterproto.message_field(5)
    checksum: str = betterproto.string_field(6)


@dataclass(eq=False, repr=False)
class RegionResult(betterproto.Message):
    regions: list["Region"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class Region(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    name: str = betterproto.string_field(2)
    category: str = betterproto.string_field(3)
    identifier: str = betterproto.string_field(4)
    created_at: datetime = betterproto.message_field(5)
    updated_at: datetime = betterproto.message_field(6)
    checksum: str = betterproto.string_field(7)


@dataclass(eq=False, repr=False)
class ReleaseDateResult(betterproto.Message):
    releasedates: list["ReleaseDate"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class ReleaseDate(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    category: "DateFormatChangeDateCategoryEnum" = betterproto.enum_field(2)
    created_at: datetime = betterproto.message_field(3)
    date: datetime = betterproto.message_field(4)
    game: "Game" = betterproto.message_field(5)
    human: str = betterproto.string_field(6)
    m: int = betterproto.int32_field(7)
    platform: "Platform" = betterproto.message_field(8)
    region: "RegionRegionEnum" = betterproto.enum_field(9)
    updated_at: datetime = betterproto.message_field(10)
    y: int = betterproto.int32_field(11)
    checksum: str = betterproto.string_field(12)
    status: "ReleaseDateStatus" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class ReleaseDateStatusResult(betterproto.Message):
    releasedatestatuses: list["ReleaseDateStatus"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class ReleaseDateStatus(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    name: str = betterproto.string_field(2)
    description: str = betterproto.string_field(3)
    created_at: datetime = betterproto.message_field(4)
    updated_at: datetime = betterproto.message_field(5)
    checksum: str = betterproto.string_field(6)


@dataclass(eq=False, repr=False)
class ScreenshotResult(betterproto.Message):
    screenshots: list["Screenshot"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class Screenshot(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    alpha_channel: bool = betterproto.bool_field(2)
    animated: bool = betterproto.bool_field(3)
    game: "Game" = betterproto.message_field(4)
    height: int = betterproto.int32_field(5)
    image_id: str = betterproto.string_field(6)
    url: str = betterproto.string_field(7)
    width: int = betterproto.int32_field(8)
    checksum: str = betterproto.string_field(9)


@dataclass(eq=False, repr=False)
class SearchResult(betterproto.Message):
    searches: list["Search"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class Search(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    alternative_name: str = betterproto.string_field(2)
    character: "Character" = betterproto.message_field(3)
    collection: "Collection" = betterproto.message_field(4)
    company: "Company" = betterproto.message_field(5)
    description: str = betterproto.string_field(6)
    game: "Game" = betterproto.message_field(7)
    name: str = betterproto.string_field(8)
    platform: "Platform" = betterproto.message_field(9)
    published_at: datetime = betterproto.message_field(10)
    test_dummy: "TestDummy" = betterproto.message_field(11)
    theme: "Theme" = betterproto.message_field(12)
    checksum: str = betterproto.string_field(13)


@dataclass(eq=False, repr=False)
class TestDummyResult(betterproto.Message):
    testdummies: list["TestDummy"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class TestDummy(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    bool_value: bool = betterproto.bool_field(2)
    created_at: datetime = betterproto.message_field(3)
    enum_test: "TestDummyEnumTestEnum" = betterproto.enum_field(4)
    float_value: float = betterproto.double_field(5)
    game: "Game" = betterproto.message_field(6)
    integer_array: list[int] = betterproto.int32_field(7)
    integer_value: int = betterproto.int32_field(8)
    name: str = betterproto.string_field(9)
    new_integer_value: int = betterproto.int32_field(10)
    private: bool = betterproto.bool_field(11)
    slug: str = betterproto.string_field(12)
    string_array: list[str] = betterproto.string_field(13)
    test_dummies: list["TestDummy"] = betterproto.message_field(14)
    test_dummy: "TestDummy" = betterproto.message_field(15)
    updated_at: datetime = betterproto.message_field(16)
    url: str = betterproto.string_field(17)
    checksum: str = betterproto.string_field(18)


@dataclass(eq=False, repr=False)
class ThemeResult(betterproto.Message):
    themes: list["Theme"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class Theme(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    created_at: datetime = betterproto.message_field(2)
    name: str = betterproto.string_field(3)
    slug: str = betterproto.string_field(4)
    updated_at: datetime = betterproto.message_field(5)
    url: str = betterproto.string_field(6)
    checksum: str = betterproto.string_field(7)


@dataclass(eq=False, repr=False)
class WebsiteResult(betterproto.Message):
    websites: list["Website"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class Website(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    category: "WebsiteCategoryEnum" = betterproto.enum_field(2)
    game: "Game" = betterproto.message_field(3)
    trusted: bool = betterproto.bool_field(4)
    url: str = betterproto.string_field(5)
    checksum: str = betterproto.string_field(6)
